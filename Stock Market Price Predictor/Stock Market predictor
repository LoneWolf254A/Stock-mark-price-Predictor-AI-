{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1qJJQUBGO9ZDHFgs7uVtFS0nSNMDjYKEh","authorship_tag":"ABX9TyNurnoQyXIoGt8dhf3q3asn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Stock Market Predictor by using AI"],"metadata":{"id":"_GEFtNp50XKA"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"vn0zx5PHsnIK","executionInfo":{"status":"ok","timestamp":1695148349546,"user_tz":-330,"elapsed":34,"user":{"displayName":"Abhimanyu Sharma","userId":"15975554426739141773"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["data =pd.read_csv('drive/MyDrive/AI/NIFTY50_all.csv')\n","data.head()"],"metadata":{"id":"9BVa34FhtSKf","executionInfo":{"status":"ok","timestamp":1695148351123,"user_tz":-330,"elapsed":1601,"user":{"displayName":"Abhimanyu Sharma","userId":"15975554426739141773"}},"colab":{"base_uri":"https://localhost:8080/","height":330},"outputId":"cbeeac4b-fe89-4946-dda2-e29532742dac"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date      Symbol Series  Prev Close    Open     High    Low   Last  \\\n","0  2007-11-27  MUNDRAPORT     EQ      440.00  770.00  1050.00  770.0  959.0   \n","1  2007-11-28  MUNDRAPORT     EQ      962.90  984.00   990.00  874.0  885.0   \n","2  2007-11-29  MUNDRAPORT     EQ      893.90  909.00   914.75  841.0  887.0   \n","3  2007-11-30  MUNDRAPORT     EQ      884.20  890.00   958.00  890.0  929.0   \n","4  2007-12-03  MUNDRAPORT     EQ      921.55  939.75   995.00  922.0  980.0   \n","\n","    Close    VWAP    Volume      Turnover  Trades  Deliverable Volume  \\\n","0  962.90  984.72  27294366  2.687719e+15     NaN           9859619.0   \n","1  893.90  941.38   4581338  4.312765e+14     NaN           1453278.0   \n","2  884.20  888.09   5124121  4.550658e+14     NaN           1069678.0   \n","3  921.55  929.17   4609762  4.283257e+14     NaN           1260913.0   \n","4  969.30  965.65   2977470  2.875200e+14     NaN            816123.0   \n","\n","   %Deliverble  \n","0       0.3612  \n","1       0.3172  \n","2       0.2088  \n","3       0.2735  \n","4       0.2741  "],"text/html":["\n","  <div id=\"df-3ffab08a-3aa2-48e7-9e11-01867c3ffa6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Symbol</th>\n","      <th>Series</th>\n","      <th>Prev Close</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Last</th>\n","      <th>Close</th>\n","      <th>VWAP</th>\n","      <th>Volume</th>\n","      <th>Turnover</th>\n","      <th>Trades</th>\n","      <th>Deliverable Volume</th>\n","      <th>%Deliverble</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2007-11-27</td>\n","      <td>MUNDRAPORT</td>\n","      <td>EQ</td>\n","      <td>440.00</td>\n","      <td>770.00</td>\n","      <td>1050.00</td>\n","      <td>770.0</td>\n","      <td>959.0</td>\n","      <td>962.90</td>\n","      <td>984.72</td>\n","      <td>27294366</td>\n","      <td>2.687719e+15</td>\n","      <td>NaN</td>\n","      <td>9859619.0</td>\n","      <td>0.3612</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2007-11-28</td>\n","      <td>MUNDRAPORT</td>\n","      <td>EQ</td>\n","      <td>962.90</td>\n","      <td>984.00</td>\n","      <td>990.00</td>\n","      <td>874.0</td>\n","      <td>885.0</td>\n","      <td>893.90</td>\n","      <td>941.38</td>\n","      <td>4581338</td>\n","      <td>4.312765e+14</td>\n","      <td>NaN</td>\n","      <td>1453278.0</td>\n","      <td>0.3172</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2007-11-29</td>\n","      <td>MUNDRAPORT</td>\n","      <td>EQ</td>\n","      <td>893.90</td>\n","      <td>909.00</td>\n","      <td>914.75</td>\n","      <td>841.0</td>\n","      <td>887.0</td>\n","      <td>884.20</td>\n","      <td>888.09</td>\n","      <td>5124121</td>\n","      <td>4.550658e+14</td>\n","      <td>NaN</td>\n","      <td>1069678.0</td>\n","      <td>0.2088</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2007-11-30</td>\n","      <td>MUNDRAPORT</td>\n","      <td>EQ</td>\n","      <td>884.20</td>\n","      <td>890.00</td>\n","      <td>958.00</td>\n","      <td>890.0</td>\n","      <td>929.0</td>\n","      <td>921.55</td>\n","      <td>929.17</td>\n","      <td>4609762</td>\n","      <td>4.283257e+14</td>\n","      <td>NaN</td>\n","      <td>1260913.0</td>\n","      <td>0.2735</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2007-12-03</td>\n","      <td>MUNDRAPORT</td>\n","      <td>EQ</td>\n","      <td>921.55</td>\n","      <td>939.75</td>\n","      <td>995.00</td>\n","      <td>922.0</td>\n","      <td>980.0</td>\n","      <td>969.30</td>\n","      <td>965.65</td>\n","      <td>2977470</td>\n","      <td>2.875200e+14</td>\n","      <td>NaN</td>\n","      <td>816123.0</td>\n","      <td>0.2741</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ffab08a-3aa2-48e7-9e11-01867c3ffa6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ffab08a-3aa2-48e7-9e11-01867c3ffa6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ffab08a-3aa2-48e7-9e11-01867c3ffa6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0efb238-612c-4451-aa99-70519dbc3155\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0efb238-612c-4451-aa99-70519dbc3155')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0efb238-612c-4451-aa99-70519dbc3155 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["\n","Range = (1,2,3,4,5,6,7,8)\n","plt.plot(data[\"Volume\"])\n","plt.title(\"Volume\")\n","plt.show()"],"metadata":{"id":"OYDiqyidRp-W","colab":{"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1695148504664,"user_tz":-330,"elapsed":630,"user":{"displayName":"Abhimanyu Sharma","userId":"15975554426739141773"}},"outputId":"7465f8c6-6e8f-4784-ca7c-d981dbe8779f"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"MWT7vuP1Og1f","executionInfo":{"status":"ok","timestamp":1695148557198,"user_tz":-330,"elapsed":510,"user":{"displayName":"Abhimanyu Sharma","userId":"15975554426739141773"}},"outputId":"f782baa0-e291-4720-a430-ae631a9f6bb3"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Prev Close           Open           High            Low  \\\n","count  235192.000000  235192.000000  235192.000000  235192.000000   \n","mean     1266.196349    1267.759708    1286.581440    1247.488465   \n","std      2581.370320    2585.259609    2619.649216    2546.621396   \n","min         0.000000       8.500000       9.750000       8.500000   \n","25%       274.300000     275.000000     279.500000     269.600000   \n","50%       566.500000     567.025000     576.900000     556.500000   \n","75%      1242.200000    1243.312500    1263.000000    1221.650000   \n","max     32861.950000   33399.950000   33480.000000   32468.100000   \n","\n","                Last          Close          VWAP        Volume      Turnover  \\\n","count  235192.000000  235192.000000  235192.00000  2.351920e+05  2.351920e+05   \n","mean     1266.388302    1266.554351    1267.13230  3.045903e+06  1.610138e+14   \n","std      2581.392543    2582.140942    2582.69998  7.333981e+06  3.298085e+14   \n","min         9.100000       9.150000       9.21000  3.000000e+00  1.047000e+07   \n","25%       274.400000     274.350000     274.69750  2.190095e+05  1.612816e+13   \n","50%       567.000000     566.700000     566.94000  1.010938e+06  6.832603e+13   \n","75%      1242.900000    1242.400000    1242.66250  3.019851e+06  1.863835e+14   \n","max     32849.000000   32861.950000   32975.24000  4.810589e+08  3.564334e+16   \n","\n","             Trades  Deliverable Volume    %Deliverble  \n","count  1.203440e+05        2.191150e+05  219115.000000  \n","mean   6.196427e+04        1.315098e+06       0.502997  \n","std    6.866457e+04        2.831670e+06       0.190019  \n","min    1.100000e+01        5.000000e+00       0.023600  \n","25%    2.183400e+04        1.253830e+05       0.364700  \n","50%    4.406800e+04        5.017560e+05       0.511000  \n","75%    7.893550e+04        1.452233e+06       0.638400  \n","max    1.643015e+06        2.325307e+08       1.000000  "],"text/html":["\n","  <div id=\"df-e51f5451-d28e-4712-ae55-2403df6d0995\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Prev Close</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Last</th>\n","      <th>Close</th>\n","      <th>VWAP</th>\n","      <th>Volume</th>\n","      <th>Turnover</th>\n","      <th>Trades</th>\n","      <th>Deliverable Volume</th>\n","      <th>%Deliverble</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>235192.000000</td>\n","      <td>235192.000000</td>\n","      <td>235192.000000</td>\n","      <td>235192.000000</td>\n","      <td>235192.000000</td>\n","      <td>235192.000000</td>\n","      <td>235192.00000</td>\n","      <td>2.351920e+05</td>\n","      <td>2.351920e+05</td>\n","      <td>1.203440e+05</td>\n","      <td>2.191150e+05</td>\n","      <td>219115.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1266.196349</td>\n","      <td>1267.759708</td>\n","      <td>1286.581440</td>\n","      <td>1247.488465</td>\n","      <td>1266.388302</td>\n","      <td>1266.554351</td>\n","      <td>1267.13230</td>\n","      <td>3.045903e+06</td>\n","      <td>1.610138e+14</td>\n","      <td>6.196427e+04</td>\n","      <td>1.315098e+06</td>\n","      <td>0.502997</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2581.370320</td>\n","      <td>2585.259609</td>\n","      <td>2619.649216</td>\n","      <td>2546.621396</td>\n","      <td>2581.392543</td>\n","      <td>2582.140942</td>\n","      <td>2582.69998</td>\n","      <td>7.333981e+06</td>\n","      <td>3.298085e+14</td>\n","      <td>6.866457e+04</td>\n","      <td>2.831670e+06</td>\n","      <td>0.190019</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>8.500000</td>\n","      <td>9.750000</td>\n","      <td>8.500000</td>\n","      <td>9.100000</td>\n","      <td>9.150000</td>\n","      <td>9.21000</td>\n","      <td>3.000000e+00</td>\n","      <td>1.047000e+07</td>\n","      <td>1.100000e+01</td>\n","      <td>5.000000e+00</td>\n","      <td>0.023600</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>274.300000</td>\n","      <td>275.000000</td>\n","      <td>279.500000</td>\n","      <td>269.600000</td>\n","      <td>274.400000</td>\n","      <td>274.350000</td>\n","      <td>274.69750</td>\n","      <td>2.190095e+05</td>\n","      <td>1.612816e+13</td>\n","      <td>2.183400e+04</td>\n","      <td>1.253830e+05</td>\n","      <td>0.364700</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>566.500000</td>\n","      <td>567.025000</td>\n","      <td>576.900000</td>\n","      <td>556.500000</td>\n","      <td>567.000000</td>\n","      <td>566.700000</td>\n","      <td>566.94000</td>\n","      <td>1.010938e+06</td>\n","      <td>6.832603e+13</td>\n","      <td>4.406800e+04</td>\n","      <td>5.017560e+05</td>\n","      <td>0.511000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1242.200000</td>\n","      <td>1243.312500</td>\n","      <td>1263.000000</td>\n","      <td>1221.650000</td>\n","      <td>1242.900000</td>\n","      <td>1242.400000</td>\n","      <td>1242.66250</td>\n","      <td>3.019851e+06</td>\n","      <td>1.863835e+14</td>\n","      <td>7.893550e+04</td>\n","      <td>1.452233e+06</td>\n","      <td>0.638400</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>32861.950000</td>\n","      <td>33399.950000</td>\n","      <td>33480.000000</td>\n","      <td>32468.100000</td>\n","      <td>32849.000000</td>\n","      <td>32861.950000</td>\n","      <td>32975.24000</td>\n","      <td>4.810589e+08</td>\n","      <td>3.564334e+16</td>\n","      <td>1.643015e+06</td>\n","      <td>2.325307e+08</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e51f5451-d28e-4712-ae55-2403df6d0995')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e51f5451-d28e-4712-ae55-2403df6d0995 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e51f5451-d28e-4712-ae55-2403df6d0995');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-91cc07c1-716b-459a-9531-50eb688b15a2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91cc07c1-716b-459a-9531-50eb688b15a2')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-91cc07c1-716b-459a-9531-50eb688b15a2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":[],"metadata":{"id":"kc3ouTr33Oy9"},"execution_count":null,"outputs":[]}]}